*** Angular.js ***

1. Введение в Angular.JS
    1) Что такое Angular.JS
    2) Первое приложение на Angular.JS

2. Основы Angular.JS
    1) Модули
    2) Контроллеры
        - Наследование контроллеров
        - Контроллеры без использования $scope
    3) Обьект $scope
        - $scope
        - $rootScope
    4) Директивы в Angular.JS.
        - ng-repeat
        - Встроенные переменные
        - Обход внутренних массивов
    5) Привязка данных
        - ng-bind
        - ng-bind-template
        - ng-non-bindable
        - ng-bind-html
    6) Директивы шаблонов
        - ng-include
        - Динамическая загрузка представлений
    7) Директива ng-switch
        - ng-switch on="key"
        - ng-switch-when="value"
        - ng-switch-default
    8) Директивы стилизации и управления элементами
        - ng-class, ng-class, ng-class-even, ng-class-odd
        - ng-show, ng-hide
        - ng-if
    9) Обработка событий
        - ng-blur, ng-focus
        - ng-change
        - ng-submit
        - ng-copy, ng-cut, ng-paste
        - ng-click, ng-dblclick
        - ng-mousedown, ng-mouseup, ng-mouseenter, ng-mouseleave, ng-mousemove
        - ng-keyup, ng-keydown, ng-keypress
    10) Фильтры {{ expression | filter }}
        - Изменение регистра (uppercase, lowercase)
        - Форматирование чисел (number:1)
        - Форматирование валюты (currency:'RUB')
        - Форматирование дат (date:'yyyy-MM-dd')
        - Фильтры orderBy и limitTo (orderBy:sortparam, limitTo:2)
        - Фильтр filter (filter:text, filter:{author:member})
    11) Создание собственных фильтров
        - Определение фильтра
    12) Валидация формы
        - ng-pattern
    13) Работа со структурой DOM
        - Навигация по странице:
            - children()
            - eq(index)
            - find(tag)
            - next()
            - parent()
            - html()
            - text()
        - Манипуляция элементами:
            - addClass(name)
            - attr(name)
            - css(name)
            - hasClass(name)
            - prop(name)
            - removeAttr(name)
            - removeClass(name)
            - text(value)
            - toggleClass(name)
            - val(), val(value)
        - Создание и удаление элементов:
            - angular.element(html)
            - after(elements)
            - append(elements)
            - clone()
            - prepend(elements)
            - remove()
            - replaceWith(element)
            - wrap(element)
        - Регистрация событий:
            - on(events, handler)
            - off(events, handler)
            - triggerHandler(event)
    14) Создание своих директив
        - function (scope, element, attrs) {}
    15) Параметры директив
        - Параметры
            - link: function (scope, element, attrs) {}
            - restrict: 'ACEM'
                - E: директива применяется к элементу
                - A: директива применяется к атрибуту
                - C: директива применяется к классу
                - M: директива применяется к комментарию
        - Применение директивы к элементу
        - Применение директивы к классам
        - Применение директивы к комментариям
    16) Шаблоны директив
        - template: '<template>'
        - templateUrl: 'template.html'
    17) Внедрение шаблонов
        - transclude: true
    18) Обработка выражений в директивах Angular.JS
        - сервис $compile

3. Сервисы
    1) Использование сервисов
        - app.factory('factoryName', function () { return {}; });
        - app.service('serviceName', function () { return {}; });
    2) Сервис $http и ajax-запросы
        - $http({ method: 'GET', url: '/question.json')
            .then(function success(response) {}
            , function error(response) {});
        - $http({ method: 'POST', url: '/question.json', data: {name: 'John', age: 25})
            .then(function success(response) {}
            , function error(response) {});
    3) Настройка ajax-запросов
        - Сокращенные формы запросов:
            - $http.get(url, config)
            - $http.post(url, data, config)
            - $http.delete(url, config)
            - $http.put(url, data, config)
            - $http.head(url, config)
            - $http.jsonp(url, config)
        - response
            - data: представляет данные, полученные от сервера
            - status: статусный код
            - headers: возвращает функцию, получающие заголовки ответа
            - config: обьект для конфигурации запроса
            - statusText: текст статуса запроса
        - config
            - data: данные, которые посылаются на сервер. Если не установить данный параметр,
                то оправляемые данные, например методом post, будут автоматически сериализироватся в json
            - headers: обьект, представляющий набор заголовков
            - method: HTTP-метод запроса
            - params: устанавливает параметры строки URL
            - timeout: устанавливает число миллисекунд действия действия запроса
            - transformRequest: функция, которая обрабатывает данные запроса перед его осуществлением
            - transformResponse: функция, которая обрабатывает ответ от сервера после осуществления запроса
            - url: устанавливает запрашиваемый URL
            - withCredentials: если параметр равен true, то в запросе также отправляются аутентификационные куки
            - xsrfHeaderNamexsrfCookieName: используется для отправки CSRF-токенов
    4) Отправка данных
    5) Передача параметров в запрос
    6) Сервис $q и promise-обьекты